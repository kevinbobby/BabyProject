apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.zhubibo.badyproject"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    loadReleaseProperties("../release-signing.properties", signingConfigs.release)

    buildTypes {
        debug {
            // 显示Log
            buildConfigField 'boolean', 'LOG_DEBUG', 'true'
            // 混淆
            minifyEnabled true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 移除无用的resource文件
            shrinkResources false
            //Zip代码压缩优化(Google Play不接受没有经过zipalign的APK)
            zipAlignEnabled true
            //签名
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField 'boolean', 'LOG_DEBUG', 'false'
            // 混淆
            minifyEnabled true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 移除无用的resource文件
            shrinkResources false
            //Zip代码压缩优化(Google Play不接受没有经过zipalign的APK)
            zipAlignEnabled true
            //签名
            signingConfig signingConfigs.release

            // applicationVariants are e.g. debug, release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        //输出apk名称为com.zhubibo.baby_1.0.0.apk
                        def fileName = "com.zhubibo.baby_${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
}


// 加载签名配置文件方法
def loadReleaseProperties(filePath, signingConfig) {
    def propsFile = file(filePath)
    def props = new Properties()
    propsFile.withReader { reader ->
        props.load(reader)
    }

    signingConfig.storeFile = file(props.storeFile)
    signingConfig.keyAlias = props.keyAlias
    signingConfig.storePassword = props.storePassword
    signingConfig.keyPassword = props.keyPassword
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:support-v4:25.0.1'
    compile 'com.android.support:design:25.0.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
